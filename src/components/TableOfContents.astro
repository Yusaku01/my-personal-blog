---
interface Props {
  headings: {
    depth: number;
    slug: string;
    text: string;
  }[];
}

const { headings } = Astro.props;

// TableOfContentsコンポーネント固有のスタイル
const tocStyles = {
  container: 'p-4 rounded-lg mb-8',
  summary: 'text-lg font-semibold cursor-pointer list-none flex items-center',
  arrow: 'mr-2 inline-block transition-transform duration-200',
  nav: 'mt-2',
  list: 'space-y-1 list-none p-0',
  getItemIndent: (depth: number) => `pl-${(depth - 1) * 4}`,
  link: 'hover:underline text-sm dark:text-white transition duration-200',
};
---

<div class={tocStyles.container}>
  <details class="toc-details">
    <summary class={tocStyles.summary}>
      <span class={`toc-arrow ${tocStyles.arrow}`}>▼</span>
      目次
    </summary>
    <nav class={tocStyles.nav}>
      <ul class={tocStyles.list}>
        {
          headings.map((heading) => (
            <li class={tocStyles.getItemIndent(heading.depth)}>
              <a href={`#${heading.slug}`} class={tocStyles.link}>
                {heading.text}
              </a>
            </li>
          ))
        }
      </ul>
    </nav>
  </details>
</div>

<style>
  .toc-arrow {
    transition: transform 0.3s;
  }

  details[open] .toc-arrow {
    transform: rotate(180deg);
  }

  details > summary::-webkit-details-marker {
    display: none;
  }
</style>

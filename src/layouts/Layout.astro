---
import { ClientRouter } from 'astro:transitions';
import Header from '../components/Header/Header.astro';
import Footer from '../components/Footer/Footer.astro';
import Breadcrumb from '../components/Breadcrump/Breadcrumb.astro';
// Self-host fonts via public/fonts; see scripts/copy-fonts.js

interface Props {
  title: string;
  description?: string;
  blogTitle?: string; // ブログ記事のタイトルを渡すためのプロパティを追加
}

const {
  title,
  description = 'SAKUSPACE（サクスペース）は、フロントエンド開発〜デザイン領域のことを中心に、アウトプットする場として運営しているブログサイトです。',
  blogTitle, // ブログタイトルを受け取る
} = Astro.props;

// OGP画像パスを動的に設定
let ogImageUrl;

// URLパス名を取得
const pathname = Astro.url.pathname;

if (blogTitle) {
  // ブログ記事の場合、スラッグに基づいたOGP画像を使用
  const slug = Astro.url.pathname.split('/').filter(Boolean).pop() || 'index';
  ogImageUrl = `/ogp/${slug}.png`;
} else if (pathname === '/' || pathname === '') {
  // トップページ
  ogImageUrl = '/ogp/default.png';
} else if (pathname === '/blog' || pathname === '/blog/') {
  // ブログ一覧ページ
  ogImageUrl = '/ogp/blog.png';
} else if (pathname === '/profile' || pathname === '/profile/') {
  // プロフィールページ
  ogImageUrl = '/ogp/profile.png';
} else if (pathname === '/contact' || pathname === '/contact/') {
  // お問い合わせページ
  ogImageUrl = '/ogp/contact.png';
} else {
  // その他のページ
  ogImageUrl = '/ogp/default.png';
}

// Google Analytics IDを環境変数から取得
const gaId = import.meta.env.PUBLIC_GOOGLE_ANALYTICS_ID;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover" />
    <meta content="email=no,telephone=no,address=no" name="format-detection" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="canonical" href={new URL(Astro.url.pathname, Astro.site).toString()} />
    <link rel="dns-prefetch" href="https://images.weserv.nl" />
    <link rel="dns-prefetch" href="https://www.googletagmanager.com" />
    <link rel="dns-prefetch" href="https://www.google.com" />
    <link rel="dns-prefetch" href="https://static.cloudflareinsights.com" />
    <link rel="preconnect" href="https://images.weserv.nl" crossorigin="anonymous" />
    <link rel="preconnect" href="https://www.googletagmanager.com" crossorigin="anonymous" />
    <link rel="preconnect" href="https://www.google.com" crossorigin="anonymous" />
    <link rel="preconnect" href="https://static.cloudflareinsights.com" crossorigin="anonymous" />
    <link rel="alternate" type="application/rss+xml" title="RSS" href="/rss.xml" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <title>{title}</title>
    <ClientRouter fallback="animate" />
    <!-- テーマ切り替え -->
    <script is:inline data-astro-rerun>
      // Wrap in an IIFE to avoid leaking identifiers across reruns/navigation.
      (() => {
        const STORAGE_KEY = 'theme';

        const resolveTheme = () => {
          const stored = localStorage.getItem(STORAGE_KEY);
          if (stored === 'dark' || stored === 'light') {
            return stored;
          }
          return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
        };

        const applyTheme = (theme = resolveTheme()) => {
          document.documentElement.classList.toggle('dark', theme === 'dark');
          localStorage.setItem(STORAGE_KEY, theme);
          window.dispatchEvent(new Event('themechange'));
        };

        if (!window.__astroThemeSync) {
          document.addEventListener('astro:before-swap', (event) => {
            const theme = resolveTheme();
            event.newDocument.documentElement.classList.toggle('dark', theme === 'dark');
          });

          document.addEventListener('astro:after-swap', () => {
            applyTheme();
          });

          window.__astroThemeSync = true;
        }

        applyTheme();
      })();
    </script>
    <!-- OGP 基本設定 -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={blogTitle ? 'article' : 'website'} />
    <meta property="og:url" content={new URL(Astro.url.pathname, Astro.site).toString()} />
    <meta property="og:image" content={new URL(ogImageUrl, Astro.site).toString()} />
    <meta property="og:site_name" content="SAKUSPACE" />
    <meta property="og:locale" content="ja_JP" />

    <!-- Twitter Card -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={new URL(ogImageUrl, Astro.site).toString()} />
    <meta name="twitter:site" content="@sakuspace" />

    <!-- Web fonts (self-hosted) -->
    <!-- Preload the most impactful font only to minimize unused-preload warnings -->
    <link
      rel="preload"
      href="/fonts/zen-kaku-gothic-new-jp-700.woff2"
      as="font"
      type="font/woff2"
      crossorigin="anonymous"
    />

    <!-- Google Analytics (gtag.js): only when ID is provided -->
    <script is:inline define:vars={{ gaId }}>
      if (gaId) {
        var s = document.createElement('script');
        s.async = true;
        s.src = 'https://www.googletagmanager.com/gtag/js?id=' + gaId;
        window.dataLayer = window.dataLayer || [];
        s.addEventListener('load', function () {
          if (typeof window.gtag === 'function') {
            window.gtag('js', new Date());
            window.gtag('config', gaId);
          }
        });
        document.head.appendChild(s);
      }
    </script>

    <!-- Google reCAPTCHA is injected per-page where needed -->

    <slot name="head" />
  </head>

  <body
    class="min-h-screen flex flex-col text-gray-900 dark:text-gray-100 transition-colors overscroll-none"
  >
    <Header />
    <!-- <div class="h-16"></div> -->
    <!-- ヘッダーの固定分のスペース -->
    <Breadcrumb blogTitle={blogTitle} />
    <main class="flex-grow bg-gray-100 dark:bg-gray-800">
      <slot />
    </main>
    <Footer />
    <style is:global>
      :root {
        --accent: 136, 58, 234;
        --accent-light: 224, 204, 250;
        --accent-dark: 49, 10, 101;
        --accent-gradient: linear-gradient(
          45deg,
          rgb(var(--accent)),
          rgb(var(--accent-light)) 30%,
          white 60%
        );
        --font-body:
          'Zen Kaku Gothic New', 'Zen Kaku Gothic New Fallback', system-ui, -apple-system,
          'Hiragino Kaku Gothic ProN', 'Yu Gothic', Meiryo, sans-serif;
      }

      body {
        font-family: var(--font-body);
        font-synthesis-weight: none;
      }

      img {
        content-visibility: auto;
      }

      /* Metrics-compatible fallback to reduce FOUT layout shift */
      @font-face {
        font-family: 'Zen Kaku Gothic New Fallback';
        /* Use common JP system fonts as stand-ins */
        src:
          local('Hiragino Kaku Gothic ProN'), local('Yu Gothic Medium'), local('Yu Gothic'),
          local('Meiryo'), local('Noto Sans CJK JP');
        /* Tweak metrics to better match Zen Kaku Gothic New */
        size-adjust: 100%;
        ascent-override: 90%;
        descent-override: 22%;
        line-gap-override: 0%;
      }

      /* Self-hosted Zen Kaku Gothic New */
      @font-face {
        font-family: 'Zen Kaku Gothic New';
        font-style: normal;
        font-weight: 400;
        font-display: optional; /* prefer no-swap for body text */
        src: url('/fonts/zen-kaku-gothic-new-jp-400.woff2') format('woff2');
      }
      @font-face {
        font-family: 'Zen Kaku Gothic New';
        font-style: normal;
        font-weight: 700;
        font-display: swap; /* headings: keep immediate swap */
        src: url('/fonts/zen-kaku-gothic-new-jp-700.woff2') format('woff2');
      }
    </style>
  </body>
</html>
